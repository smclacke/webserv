server {
	listen 127.0.0.1:9999;
	
	server_name default_test_server;

	client_max_body_size 10M;

	error_page 404 /404.html;
	error_page 500 /500.html;

	Location / {
		allowed_methods GET POST;

		root /var/www/html;

		autoindex off;

		index index.html;

		cgi_ext .php;
		cgi_path /usr/bin/php-cgi;
	}


    location /old-route {
        return 301 /new-route;
    }

    location /files {
        autoindex on;
        allowed_methods GET;
        root /var/www/files;
    }

    location /upload {
        allowed_methods POST;
        upload_dir /var/uploads;
        client_max_body_size 2M;
    }
	server_name 
}


# Server 2: Listening on 127.0.0.1:8080 (local only)
server {
    listen 127.0.0.1:8080;

    # Optional: define server name (leave empty for default)
    server_name localhost;

    # Limit client body size to 5MB
    client_max_body_size 5M;

    # Default error pages
    error_page 404 /404.html;
    error_page 500 /500.html;

    # Route 1: Serve files from /var/www/html-local
    location / {
        # Allow GET method only
        allowed_methods GET;

        # Set root directory for local files
        root /var/www/html-local;

        # Enable directory listing
        autoindex on;

        # Default file to serve if directory is requested
        index index.html;
    }

    # Route 2: Local file upload handler
    location /upload {
        # Allow POST method for file upload
        allowed_methods POST;

        # Directory to save uploaded files
        upload_dir /var/uploads-local;

        # Set a limit for file size (1MB in this case)
        client_max_body_size 1M;
    }
}

# /** Routes need to have one or multiple of the following rules/configuratoin
#  * Port and host for each server
#  * setup server_names or leave them default
#  * the first server for a host:port will be the default for this host:port
#  * default error pages
#  * limit client body size
#  *
#  * ----------------- Rules for Routes -----------------
#  * Define accepted HTTP methods for the route
#  * Definea HTTP redirection
#  * Define a directory from where the file should be searched ( root directory )
#  * turn on or off directory listing
#  * Set a default file to answer of the request is a directory
#  * execute CGI based on certain file extension(.php for example)
#  * should work wiith POST and GET methods
#  * make the route able to accept uploaded files and configures where they should be saved.
#  */